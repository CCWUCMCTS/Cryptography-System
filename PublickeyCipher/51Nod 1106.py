from random import randint
pri = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 233, 239,
       241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419,
       421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601,
       607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797,
       809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997
       ]


def speed(a, b, p):
    ans = 1
    cur = a
    while b != 0:
        if b & 1:
            ans = ans * cur % p
        cur = cur * cur % p
        b >>= 1
    return ans


def Miller_Rabin(n, k=10):
    if n <= 1000:
        return n in pri
    t = n - 1
    s = 0
    while(t % 2 == 0):
        s += 1
        t = t // 2
    for _ in range(k):
        b = randint(2, n-2)
        r = speed(b, t, n)
        if r == 1 or r == n-1:
            continue
        else:
            for _ in range(1, s):
                r = r * r % n
                if r == n-1:
                    break
            else:
                return False
    return True


n = int(input())
for _ in range(n):
    num = int(input())
    if Miller_Rabin(num):
        print('Yes')
    else:
        print('No')
